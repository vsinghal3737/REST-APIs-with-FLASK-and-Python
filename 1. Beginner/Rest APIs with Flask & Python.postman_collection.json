{
	"info": {
		"_postman_id": "ac761a36-aaf2-4a40-aeb9-8ad882ee1a7c",
		"name": "Rest APIs with Flask & Python",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Section 3",
			"item": [
				{
					"name": "/store",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:5000/store",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"store"
							]
						}
					},
					"response": []
				},
				{
					"name": "/store/<name>",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:5000/store/My First Store",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"store",
								"My First Store"
							]
						}
					},
					"response": []
				},
				{
					"name": "/store/<name>/item",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:5000/store/My First Store/item",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"store",
								"My First Store",
								"item"
							]
						}
					},
					"response": []
				},
				{
					"name": "/store",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"My Second Store\"\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:5000/store",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"store"
							]
						}
					},
					"response": []
				},
				{
					"name": "/store/<name>/item",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Conte",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"new iTem\",\n\t\"price\": 9999\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:5000/store/My First Store/item",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"store",
								"My First Store",
								"item"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Section 4",
			"item": [
				{
					"name": "/items",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:5000/items",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"items"
							]
						},
						"description": "This should return a list of items, each in JSON format."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:5000/item/<name>",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"item",
								"<name>"
							]
						},
						"description": "This will return one specific item, uniquely identified by its name. No two items may have the same name."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"price\": 99.99\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:5000/item/<name>",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"item",
								"<name>"
							]
						},
						"description": "This will create a new item, if the item alreadt exists, it will fail."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"price\": 99.99\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:5000/item/<name>",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"item",
								"<name>"
							]
						},
						"description": "This will delete one specific item, uniquely identified by its name. No two items may have the same name."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"price\": 99.99\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:5000/item/<name>",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"item",
								"<name>"
							]
						},
						"description": "This will create a new item or update and existing item."
					},
					"response": []
				},
				{
					"name": "/auth",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"vsinghal\",\n\t\"password\": \"infernal\"\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:5000/auth",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"auth"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Section 5",
			"item": [
				{
					"name": "/items",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:5000/items",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"items"
							]
						},
						"description": "This should return a list of items, each in JSON format."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1NjAyNDE2NDMsImlhdCI6MTU2MDI0MTM0MywibmJmIjoxNTYwMjQxMzQzLCJpZGVudGl0eSI6MX0.Ux02V_EnByaSYBXWwkfTJGEWXZ_cyyV1wRuq40Zb9qc",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:5000/item/test",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"item",
								"test"
							]
						},
						"description": "This will return one specific item, uniquely identified by its name. No two items may have the same name."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"price\": 99.99\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:5000/item/<name>",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"item",
								"<name>"
							]
						},
						"description": "This will create a new item, if the item alreadt exists, it will fail."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"price\": 99.99\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:5000/item/<name>",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"item",
								"<name>"
							]
						},
						"description": "This will delete one specific item, uniquely identified by its name. No two items may have the same name."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"price\": 99.99\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:5000/item/<name>",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"item",
								"<name>"
							]
						},
						"description": "This will create a new item or update and existing item."
					},
					"response": []
				},
				{
					"name": "/auth",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"vsinghal\",\n\t\"password\": \"infernal\"\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:5000/auth",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "/register",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"vsinghal\",\n\t\"password\": \"infernal\"\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:5000/register",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"register"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Section 6",
			"item": [
				{
					"name": "/items",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f067bea1-0625-4fae-abb2-74436766de12",
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/items",
							"host": [
								"{{url}}"
							],
							"path": [
								"items"
							]
						},
						"description": "This should return a list of items, each in JSON format."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{url}}/item/new",
							"host": [
								"{{url}}"
							],
							"path": [
								"item",
								"new"
							]
						},
						"description": "This will return one specific item, uniquely identified by its name. No two items may have the same name."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a4a2e329-90bf-41aa-be89-b2c1706fdee3",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"price\": 99.99,\n\t\"store_id\":1\n}"
						},
						"url": {
							"raw": "{{url}}/item/new",
							"host": [
								"{{url}}"
							],
							"path": [
								"item",
								"new"
							]
						},
						"description": "This will create a new item, if the item alreadt exists, it will fail."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"price\": 99.99\n}"
						},
						"url": {
							"raw": "{{url}}/item/<name>",
							"host": [
								"{{url}}"
							],
							"path": [
								"item",
								"<name>"
							]
						},
						"description": "This will delete one specific item, uniquely identified by its name. No two items may have the same name."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"price\": 99.99\n}"
						},
						"url": {
							"raw": "{{url}}/item/<name>",
							"host": [
								"{{url}}"
							],
							"path": [
								"item",
								"<name>"
							]
						},
						"description": "This will create a new item or update and existing item."
					},
					"response": []
				},
				{
					"name": "/stores",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f067bea1-0625-4fae-abb2-74436766de12",
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/stores",
							"host": [
								"{{url}}"
							],
							"path": [
								"stores"
							]
						},
						"description": "This should return a list of stores, each in JSON format."
					},
					"response": []
				},
				{
					"name": "/store/<name>",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "JWT {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{url}}/store/<name>",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"<name>"
							]
						},
						"description": "This will return one specific store, uniquely identified by its name. No two stores have the same name."
					},
					"response": []
				},
				{
					"name": "/store/<name>",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a4a2e329-90bf-41aa-be89-b2c1706fdee3",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"price\": 99.99,\n\t\"store_id\":1\n}"
						},
						"url": {
							"raw": "{{url}}/store/<name>",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"<name>"
							]
						},
						"description": "This will create a new store, if the item alreadt exists, it will fail."
					},
					"response": []
				},
				{
					"name": "/store/<name>",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"price\": 99.99\n}"
						},
						"url": {
							"raw": "{{url}}/store/<name>",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"<name>"
							]
						},
						"description": "This will delete one specific store, uniquely identified by its name. No two stores may have the same name."
					},
					"response": []
				},
				{
					"name": "/login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cbe7df3b-b6e8-496e-8a85-99c99eaa0c5c",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Access Token was not empty\"] = jsonData.access_token !== undefined;",
									"tests[\"Refresh Token was not empty\"] = jsonData.refresh_token !== undefined;",
									"",
									"",
									"pm.environment.set(\"access_token\", jsonData.access_token);",
									"pm.environment.set(\"refresh_token\", jsonData.refresh_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"vsinghal\",\n\t\"password\": \"infernal\"\n}"
						},
						"url": {
							"raw": "{{url}}/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "/logout",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{url}}/logout",
							"host": [
								"{{url}}"
							],
							"path": [
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "/register",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"vsinghal\",\n\t\"password\": \"infernal\"\n}"
						},
						"url": {
							"raw": "{{url}}/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "/user/<id>",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/user/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "/user/<name>",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/user/<name>",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"<name>"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "381d1182-df86-4616-882d-cb87b0ce33b7",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "42d18d01-9c69-444d-b7fe-eea9d5986d57",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "REST-Heroku",
			"item": [
				{
					"name": "/items",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f067bea1-0625-4fae-abb2-74436766de12",
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/items",
							"host": [
								"{{url}}"
							],
							"path": [
								"items"
							]
						},
						"description": "This should return a list of items, each in JSON format."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "JWT {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{url}}/item/new",
							"host": [
								"{{url}}"
							],
							"path": [
								"item",
								"new"
							]
						},
						"description": "This will return one specific item, uniquely identified by its name. No two items may have the same name."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a4a2e329-90bf-41aa-be89-b2c1706fdee3",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"price\": 99.99,\n\t\"store_id\":1\n}"
						},
						"url": {
							"raw": "{{url}}/item/new",
							"host": [
								"{{url}}"
							],
							"path": [
								"item",
								"new"
							]
						},
						"description": "This will create a new item, if the item alreadt exists, it will fail."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"price\": 99.99\n}"
						},
						"url": {
							"raw": "{{url}}/item/<name>",
							"host": [
								"{{url}}"
							],
							"path": [
								"item",
								"<name>"
							]
						},
						"description": "This will delete one specific item, uniquely identified by its name. No two items may have the same name."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"price\": 99.99\n}"
						},
						"url": {
							"raw": "{{url}}/item/<name>",
							"host": [
								"{{url}}"
							],
							"path": [
								"item",
								"<name>"
							]
						},
						"description": "This will create a new item or update and existing item."
					},
					"response": []
				},
				{
					"name": "/stores",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f067bea1-0625-4fae-abb2-74436766de12",
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/stores",
							"host": [
								"{{url}}"
							],
							"path": [
								"stores"
							]
						},
						"description": "This should return a list of stores, each in JSON format."
					},
					"response": []
				},
				{
					"name": "/store/<name>",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "JWT {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{url}}/store/<name>",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"<name>"
							]
						},
						"description": "This will return one specific store, uniquely identified by its name. No two stores have the same name."
					},
					"response": []
				},
				{
					"name": "/store/<name>",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a4a2e329-90bf-41aa-be89-b2c1706fdee3",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"price\": 99.99,\n\t\"store_id\":1\n}"
						},
						"url": {
							"raw": "{{url}}/store/<name>",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"<name>"
							]
						},
						"description": "This will create a new store, if the item alreadt exists, it will fail."
					},
					"response": []
				},
				{
					"name": "/store/<name>",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"price\": 99.99\n}"
						},
						"url": {
							"raw": "{{url}}/store/<name>",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"<name>"
							]
						},
						"description": "This will delete one specific store, uniquely identified by its name. No two stores may have the same name."
					},
					"response": []
				},
				{
					"name": "/auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cbe7df3b-b6e8-496e-8a85-99c99eaa0c5c",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Access Token was not empty\"] = jsonData.access_token !== undefined;",
									"",
									"",
									"pm.environment.set(\"jwt_token\", jsonData.access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"vsinghal\",\n\t\"password\": \"infernal\"\n}"
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "/register",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"vsinghal\",\n\t\"password\": \"infernal\"\n}"
						},
						"url": {
							"raw": "{{url}}/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "381d1182-df86-4616-882d-cb87b0ce33b7",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "42d18d01-9c69-444d-b7fe-eea9d5986d57",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	]
}